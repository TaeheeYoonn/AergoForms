group = 'io.blocko'

ext {
  springBootVersion = '2.0.0.RELEASE'
  herajVersion = '1.4.0'
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    google()
    mavenCentral()
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
  }
}

allprojects {
  version '0.1-SNAPSHOT'
}

def javaProjects = [project('backend')]

configure(javaProjects) {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'
  apply plugin: 'checkstyle'
  apply plugin: 'eclipse'

  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8

  eclipseJdt.doLast( {
    ant.propertyfile(file: ".settings/org.eclipse.core.resources.prefs") {
      ant.entry(key: "eclipse.preferences.version", value: "1")
      ant.entry(key: "encoding/<project>", value: "utf8")
    }
  } )

  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }

  compileJava.options.encoding = 'UTF-8'
  compileTestJava.options.encoding = 'UTF-8'

  repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
  }

  dependencies {
  	compile fileTree(dir: '../libs', include: ['*.jar'])
    compileOnly "org.projectlombok:lombok:1.18.8"
    testCompile "org.projectlombok:lombok:1.18.8"
  }

  checkstyle {
    project.ext.checkstyleVersion = '8.24'
    project.ext.sevntuChecksVersion = '1.26.0'

    ignoreFailures = true
    configFile = file("${rootProject.projectDir}/styles.xml")
    reportsDir = file("${buildDir}/checkstyle-reports")
    configurations {
      checkstyle
    }
    checkstyleMain {
      source = sourceSets.main.allSource
      reportsDir = checkstyle.reportsDir
    }
    dependencies{
      assert project.hasProperty("checkstyleVersion")

      checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
      checkstyle "com.github.sevntu-checkstyle:sevntu-checks:${sevntuChecksVersion}"
    }
  }

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  jar {
    baseName = 'aergo-forms'
  }

}
